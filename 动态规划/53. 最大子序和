# -*- coding: utf-8 -*-
'''
题目：
给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。

例如：
输入: [-2,1,-3,4,-1,2,1,-5,4]
输出: 6
解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/maximum-subarray/
'''

'''
思路：动态规划
· 可以从第一个数开始向后扫描，找到最大的和，再从第二个数开始向后扫描，找到最大的和，依次进行下去，用一个数组存储这些值，其中最大的就是所需的答案；
· 直接在原数组上记录最大的子序和，就是一次遍历，从左到右记录最大子序和，只不过要找准当前最大子序和与前一最大子序和的关系，最后再找出数组中的最大值。
'''

class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        size = len(nums)
        f = [0]*size
        for i in range(size):
            f[i] = max(f[i-1]+nums[i],nums[i]) if i else nums[0]
        return max(f)
