# -*- coding: utf-8 -*-
'''
题目：
给定S和T两个字符串，当它们分别被输入到空白的文本编辑器后，判断二者是否相等，并返回结果。 
# 代表退格字符。
注意：如果对空文本输入退格字符，文本继续为空。

例如：
输入：S = "ab#c", T = "ad#c"
输出：true
解释：S 和 T 都会变成 “ac”。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/backspace-string-compare
'''

'''
思路： 双指针
一个字符是否会被删掉，只取决于该字符后面的退格符，而与该字符前面的退格符无关。
因此当我们逆序地遍历字符串，就可以立即确定当前字符是否会被删掉。
具体地，我们定义 skip 表示当前待删除的字符的数量。每次我们遍历到一个字符：
·若该字符为退格符，则我们需要多删除一个普通字符，我们让 skip 加 1；
若该字符为普通字符：
·若 skip 为 0，则说明当前字符不需要删去；
·若 skip 不为 0，则说明当前字符需要删去，我们让 skip 减 1。
这样，我们定义两个指针，分别指向两字符串的末尾。
每次我们让两指针逆序地遍历两字符串，直到两字符串能够各自确定一个字符，然后将这两个字符进行比较。
重复这一过程直到找到的两个字符不相等，或遍历完字符串为止。
'''

class Solution:
    def backspaceCompare(self, S: str, T: str) -> bool:
        def buildstack(str):
            li=[]
            for s in str:
                if s!="#":
                    li.append(s)
                else:
                    if li:
                        li.pop()
            return li
        return buildstack(S)==buildstack(T)
