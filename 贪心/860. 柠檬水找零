# -*- coding: utf-8 -*-
'''
题目：
在柠檬水摊上，每一杯柠檬水的售价为 5 美元。
顾客排队购买你的产品，（按账单 bills 支付的顺序）一次购买一杯。
每位顾客只买一杯柠檬水，然后向你付5美元、10美元或20美元。你必须给每个顾客正确找零，也就是说净交易是每位顾客向你支付5美元。
注意，一开始你手头没有任何零钱。
如果你能给每位顾客正确找零，返回 true ，否则返回 false 。

例如：
输入：[5,5,5,10,20]
输出：true
解释：
前 3 位顾客那里，我们按顺序收取 3 张 5 美元的钞票。
第 4 位顾客那里，我们收取一张 10 美元的钞票，并返还 5 美元。
第 5 位顾客那里，我们找还一张 10 美元的钞票和一张 5 美元的钞票。
由于所有客户都得到了正确的找零，所以我们输出 true。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/lemonade-change
'''

'''
思路：
模拟找零钱的过程

'''
############ 解法一：模拟法  ##############
# class Solution:
#     def lemonadeChange(self, bills: List[int]) -> bool:
#         pofit = []
#         back = 0
#         for i in bills:
#             if i == 5:
#                 pofit.append(i)
#             if i== 10:
#                 back = 5
#                 if 5 in pofit:
#                     pofit.remove(5)
#                     pofit.append(10)
#                     continue
#                 else:
#                     return False
#             if i == 20:
#                 if 5 in pofit and 10 in pofit:
#                     pofit.remove(5)
#                     pofit.remove(10)
#                     pofit.append(20)
#                     continue
#                 elif pofit.count(5)>=3:
#                     pofit.remove(5)
#                     pofit.remove(5)
#                     pofit.remove(5)
#                     pofit.append(20)
#                     continue
#                 else:
#                     return False
#         return True

############ 解法一：优化算法  ##############
class Solution:
    def lemonadeChange(self, bills: List[int]) -> bool:
        five = ten = 0
        for bill in bills:
            if bill == 5:
                five += 1
            elif bill == 10:
                if five < 1:
                    return False
                else:
                    five -= 1
                    ten += 1
            else:
                if ten >= 1 and five >=1:
                    ten -= 1
                    five -= 1
                elif five >= 3:
                    five -= 3
                else:
                    return False
        return True
