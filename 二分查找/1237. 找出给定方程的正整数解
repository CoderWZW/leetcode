# -*- coding: utf-8 -*-
'''
题目：
给你一个函数  f(x, y) 和一个目标结果 z，请你计算方程 f(x,y) == z 所有可能的正整数 数对 x 和 y。
给定函数是严格单调的，也就是说：
f(x, y) < f(x + 1, y)
f(x, y) < f(x, y + 1)

例如：
输入：function_id = 1, z = 5
输出：[[1,4],[2,3],[3,2],[4,1]]
解释：function_id = 1 表示 f(x, y) = x + y

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/find-positive-integer-solution-for-a-given-equation
'''

'''
思路：
1.题目保证 f(x, y) == z 的解处于 1 <= x, y <= 1000 的范围内，并且给定函数是严格单调的
2.所以循环1-1000为x，然后二分查找y，当f(x,1)>z的时候，因为函数单调，所以可以直接break不再循环x
3.确定x的时候,y的左右边界为1和1000,当f(1,mid)<z,左边界=mid+1,f(1,mid)>z,右边界=mid-1,等于z,添加到列表l
4.又因为函数单调,x固定时,y最多只有一个.所以跳出此次x的循环.
'''

"""
   This is the custom function interface.
   You should not implement it, or speculate about its implementation
   class CustomFunction:
       # Returns f(x, y) for any given positive integers x and y.
       # Note that f(x, y) is increasing with respect to both x and y.
       # i.e. f(x, y) < f(x + 1, y), f(x, y) < f(x, y + 1)
       def f(self, x, y):
  
"""

class Solution:
    def findSolution(self, customfunction: 'CustomFunction', z: int) -> List[List[int]]:
        ans = []
        for x in range(1,z+1):
            left, right = 1, z
            while left < right:
                mid = (left + right) // 2
                res = customfunction.f(x,mid)
                if res < z:
                    left = mid + 1
                else:
                    right = mid
            if customfunction.f(x,left) == z:
                ans.append([x,left])
        return ans
