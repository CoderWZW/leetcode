# -*- coding: utf-8 -*-
'''
题目：
给定一个整数数组，找出总和最大的连续数列，并返回总和。

例如：
输入： [-2,1,-3,4,-1,2,1,-5,4]
输出： 6
解释： 连续子数组 [4,-1,2,1] 的和最大，为 6。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/contiguous-sequence-lcci/
'''

'''
思路：
初始化sum，maxsum
对于每个 nums[i]：
sum=max(sum+nums[i],nums[i])
maxsum=max(sum,maxsum)
返回 maxsummaxsum
'''

class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        maxsum, sum = float('-inf'), float('-inf')
        for i in nums:
            sum = max(sum + i, i)
            maxsum = max(sum, maxsum)
        return maxsum
