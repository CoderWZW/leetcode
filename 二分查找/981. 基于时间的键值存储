# -*- coding: utf-8 -*-
'''
题目：
创建一个基于时间的键值存储类 TimeMap，它支持下面两个操作：

1. set(string key, string value, int timestamp)

存储键 key、值 value，以及给定的时间戳 timestamp。
2. get(string key, int timestamp)

返回先前调用 set(key, value, timestamp_prev) 所存储的值，其中 timestamp_prev <= timestamp。
如果有多个这样的值，则返回对应最大的  timestamp_prev 的那个值。
如果没有值，则返回空字符串（""）。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/time-based-key-value-store
'''

'''
思路： HashMap + 二分查找
对于每一个键 key 的 get 和 set 两种操作，我们只需要关注与之对应的时间戳与值。
我们可以将这些信息存储在一个 HashMap 中。

对于每一个键 key ，我们可以在已经按照时间戳排序好的序列中进行二分查找，从而找到与 key 相关的 value 。
'''

class TimeMap(object):
    def __init__(self):
        self.M = collections.defaultdict(list)

    def set(self, key, value, timestamp):
        self.M[key].append((timestamp, value))

    def get(self, key, timestamp):
        A = self.M.get(key, None)
        if A is None: return ""
        i = bisect.bisect(A, (timestamp, chr(127)))
        return A[i-1][1] if i else ""
