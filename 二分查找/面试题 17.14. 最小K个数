# -*- coding: utf-8 -*-
'''
题目：
设计一个算法，找出数组中最小的k个数。以任意顺序返回这k个数均可。

例如：
输入： arr = [1,3,5,7,2,4,6,8], k = 4
输出： [1,2,3,4]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/smallest-k-lcci/
'''

'''
思路：
快排+二分查找
'''
class Solution:
    def smallestK(self, arr: List[int], k: int) -> List[int]:
        def helper(arr, k, left, right):
            ##### 标准快速排序
            pivot = left
            low, high = left, left+1
            for high in range(left+1, right+1):
                if arr[high] < arr[pivot]:
                    low += 1
                    arr[low], arr[high] = arr[high], arr[low]
            arr[left], arr[low] = arr[low], arr[left]
            ###若当前分块长度不等于目标长度k，则根据情况进行下一步细分
            if low-left+1 < k:
                helper(arr, k-low+left-1, low+1, right)
            elif low-left+1 > k:
                helper(arr, k, left, low-1)
        
        if not arr or not k:
            return []
        helper(arr, k, 0, len(arr)-1)
        return arr[:k]
