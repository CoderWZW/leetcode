# -*- coding: utf-8 -*-
'''
题目： 
统计一个数字在排序数组中出现的次数。

例如：
输入: nums = [5,7,7,8,8,10], target = 8
输出: 2

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/
'''

'''
思路：
二分法：

'''

############# 暴力解法 ##################
# class Solution:
#     def search(self, nums: List[int], target: int) -> int:
#         m = {}
#         for i in nums:
#             if i not in m:
#                 m[i] = 1
#             else:
#                 m[i] += 1
#         if target not in m:
#             return 0
#         if target in m:
#             return m[target]

class Solution:
    def search(self, nums: [int], target: int) -> int:
        # 搜索右边界 right
        i, j = 0, len(nums) - 1
        while i <= j:
            m = (i + j) // 2
            if nums[m] <= target: i = m + 1
            else: j = m - 1
        right = i
        # 若数组中无 target ，则提前返回
        if j >= 0 and nums[j] != target: return 0
        # 搜索左边界 left
        i = 0
        while i <= j:
            m = (i + j) // 2
            if nums[m] < target: i = m + 1
            else: j = m - 1
        left = j
        return right - left - 1
